/* tslint:disable */
/* eslint-disable */
/**
 * ShpanKids API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiUserProblemSolution
 */
export interface ApiUserProblemSolution {
    /**
     * 
     * @type {string}
     * @memberof ApiUserProblemSolution
     */
    problemId: string;
    /**
     * 
     * @type {string}
     * @memberof ApiUserProblemSolution
     */
    problemTitle: string;
    /**
     * 
     * @type {Date}
     * @memberof ApiUserProblemSolution
     */
    solvedDate: Date;
    /**
     * 
     * @type {string}
     * @memberof ApiUserProblemSolution
     */
    userProvidedAnswerId: string;
    /**
     * 
     * @type {string}
     * @memberof ApiUserProblemSolution
     */
    correctAnswerId: string;
    /**
     * 
     * @type {boolean}
     * @memberof ApiUserProblemSolution
     */
    correct: boolean;
}

/**
 * Check if a given object implements the ApiUserProblemSolution interface.
 */
export function instanceOfApiUserProblemSolution(value: object): boolean {
    if (!('problemId' in value)) return false;
    if (!('problemTitle' in value)) return false;
    if (!('solvedDate' in value)) return false;
    if (!('userProvidedAnswerId' in value)) return false;
    if (!('correctAnswerId' in value)) return false;
    if (!('correct' in value)) return false;
    return true;
}

export function ApiUserProblemSolutionFromJSON(json: any): ApiUserProblemSolution {
    return ApiUserProblemSolutionFromJSONTyped(json, false);
}

export function ApiUserProblemSolutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiUserProblemSolution {
    if (json == null) {
        return json;
    }
    return {
        
        'problemId': json['problemId'],
        'problemTitle': json['problemTitle'],
        'solvedDate': (new Date(json['solvedDate'])),
        'userProvidedAnswerId': json['userProvidedAnswerId'],
        'correctAnswerId': json['correctAnswerId'],
        'correct': json['correct'],
    };
}

export function ApiUserProblemSolutionToJSON(value?: ApiUserProblemSolution | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'problemId': value['problemId'],
        'problemTitle': value['problemTitle'],
        'solvedDate': ((value['solvedDate']).toISOString()),
        'userProvidedAnswerId': value['userProvidedAnswerId'],
        'correctAnswerId': value['correctAnswerId'],
        'correct': value['correct'],
    };
}

