/* tslint:disable */
/* eslint-disable */
/**
 * ShpanKids API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UIFamilyMember } from './UIFamilyMember';
import {
    UIFamilyMemberFromJSON,
    UIFamilyMemberFromJSONTyped,
    UIFamilyMemberToJSON,
} from './UIFamilyMember';

/**
 * Family info
 * @export
 * @interface UIFamilyInfo
 */
export interface UIFamilyInfo {
    /**
     * 
     * @type {string}
     * @memberof UIFamilyInfo
     */
    adminEmail: string;
    /**
     * 
     * @type {string}
     * @memberof UIFamilyInfo
     */
    familyUri: string;
    /**
     * 
     * @type {string}
     * @memberof UIFamilyInfo
     */
    familyDisplayName: string;
    /**
     * 
     * @type {Array<UIFamilyMember>}
     * @memberof UIFamilyInfo
     */
    members: Array<UIFamilyMember>;
}

/**
 * Check if a given object implements the UIFamilyInfo interface.
 */
export function instanceOfUIFamilyInfo(value: object): boolean {
    if (!('adminEmail' in value)) return false;
    if (!('familyUri' in value)) return false;
    if (!('familyDisplayName' in value)) return false;
    if (!('members' in value)) return false;
    return true;
}

export function UIFamilyInfoFromJSON(json: any): UIFamilyInfo {
    return UIFamilyInfoFromJSONTyped(json, false);
}

export function UIFamilyInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UIFamilyInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'adminEmail': json['adminEmail'],
        'familyUri': json['familyUri'],
        'familyDisplayName': json['familyDisplayName'],
        'members': ((json['members'] as Array<any>).map(UIFamilyMemberFromJSON)),
    };
}

export function UIFamilyInfoToJSON(value?: UIFamilyInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'adminEmail': value['adminEmail'],
        'familyUri': value['familyUri'],
        'familyDisplayName': value['familyDisplayName'],
        'members': ((value['members'] as Array<any>).map(UIFamilyMemberToJSON)),
    };
}

