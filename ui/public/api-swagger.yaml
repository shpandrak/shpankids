openapi: 3.0.1
info:
  title: ShpanKids API
  version: "0.1"
tags:
  - name: ShpanKids API
paths:
  /api/ui/userInfo:
    get:
      tags:
        - UI
      description: Get logged in user info
      operationId: getUserInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UIUserInfo'

  /api/ui/familyInfo:
    get:
      tags:
        - UI
      description: Get session family info
      operationId: getFamilyInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UIFamilyInfo'

  /api/commands/update-task-status:
    post:
      tags:
        - shpankids
      description: Update Task Status
      operationId: updateTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUpdateTaskStatusCommandArgs'
      responses:
        '200':
          description: OK

  /api/commands/load-problem-for-assignment:
    post:
      tags:
        - shpankids
      description: Loads next problem for assignment
      operationId: loadProblemForAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLoadProblemForAssignmentCommandArgs'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLoadProblemForAssignmentCommandResult'

  /api/commands/submit-problem-answer:
    post:
      tags:
        - shpankids
      description: Submit problem answer
      operationId: submitProblemAnswer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSubmitProblemAnswerCommandArgs'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSubmitProblemAnswerCommandResp'


  /api/commands/generate-problems:
    post:
      tags:
        - shpankids
      description: Generate problems for problem set
      operationId: generateProblems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiGenerateProblemsCommandArgs'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiProblemForEdit'

  /api/commands/create-family-task:
    post:
      tags:
        - shpankids
      description: Create Family Task
      operationId: createFamilyTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCreateFamilyTaskCommandArgs'
      responses:
        '200':
          description: OK

  /api/commands/create-problems-in-set:
    post:
      tags:
        - shpankids
      description: Create Problems in Set
      operationId: createProblemsInSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCreateProblemsInSetCommandArgs'
      responses:
        '200':
          description: OK

  /api/commands/create-problemset:
    post:
      tags:
        - shpankids
      description: Create Problem Set
      operationId: createProblemSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCreateProblemSetCommandArgs'
      responses:
        '200':
          description: OK

  /api/commands/delete-family-task:
    post:
      tags:
        - shpankids
      description: Delete Family Task
      operationId: deleteFamilyTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDeleteFamilyTaskCommandArgs'
      responses:
        '200':
          description: OK

  /api/commands/update-family-task:
    post:
      tags:
        - shpankids
      description: Update Family Task
      operationId: updateFamilyTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUpdateFamilyTaskCommandArgs'
      responses:
        '200':
          description: OK


  /api/assignments:
    get:
      tags:
        - shpankids
      description: list Assignments
      operationId: listAssignments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiAssignment'

  /api/family-problem-sets:
    get:
      tags:
        - shpankids
      description: list Problem Sets assign by family
      operationId: listUserFamilyProblemSets
      parameters:
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiProblemSet'

  /api/family-problem-sets/{problemSetId}/problems-for-edit:
    get:
      tags:
        - shpankids
      description: list Problem Set Problems for editing
      operationId: listProblemSetProblems
      parameters:
        - name: problemSetId
          in: path
          description: Problem Set ID
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiProblemForEdit'

  /api/stats:
    get:
      tags:
        - shpankids
      description: Task statistics
      operationId: getStats
      parameters:
        - name: from
          in: query
          description: From date
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: To date
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiTaskStats'


components:
  schemas:
    UIUserInfo:
      type: object
      description: User Info
      required:
        - email
        - familyDisplayName
        - familyUri
      properties:
        email:
          type: string
          format: email
        familyDisplayName:
          type: string
        familyUri:
          type: string
        firstName:
          type: string
        lastName:
          type: string

    UIFamilyInfo:
      type: object
      description: Family info
      required:
        - familyUri
        - adminEmail
        - familyDisplayName
        - members
        - tasks
      properties:
        adminEmail:
          type: string
          format: email
        familyUri:
          type: string
        familyDisplayName:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/UIFamilyMember'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/UIFamilyTask'

    UIFamilyTask:
      type: object
      required:
        - id
        - title
        - memberIds
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        memberIds:
          type: array
          items:
            type: string


    UIFamilyMember:
      type: object
      description: Family member
      required:
        - email
        - firstName
        - lastName
        - role
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: '#/components/schemas/ApiFamilyRole'

    ApiFamilyRole:
      type: string
      enum:
        - admin
        - member

    ApiAssignmentType:
      type: string
      enum:
        - task
        - problemSet
    ApiAssignment:
      required:
        - id
        - type
        - title
        - forDate
        - status
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ApiAssignmentType'
        title:
          type: string
        forDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ApiAssignmentStatus'
        description:
          type: string

    ApiProblemSet:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string

    ApiProblem:
      type: object
      required:
        - id
        - title
        - answers
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/ApiProblemAnswer'
    ApiProblemAnswer:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string

    ApiProblemForEdit:
      type: object
      required:
        - title
        - answers
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/ApiProblemAnswerForEdit'


    ApiProblemAnswerForEdit:
      type: object
      required:
        - title
        - isCorrect
      properties:
        id:
          type: string
        title:
          type: string
        isCorrect:
          type: boolean
        description:
          type: string

    ApiAssignmentStatus:
      type: string
      enum:
        - open
        - done
        - blocked
        - irrelevant


    ApiUpdateTaskStatusCommandArgs:
      type: object
      required:
        - taskId
        - forDate
        - status
      properties:
        taskId:
          type: string
        forDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ApiAssignmentStatus'
        comment:
          type: string

    ApiCreateFamilyTaskCommandArgs:
      type: object
      required:
        - task
      properties:
        task:
          $ref: '#/components/schemas/ApiFamilyTask'

    ApiFamilyTask:
      type: object
      required:
        - id
        - title
        - memberIds
      properties:
        title:
          type: string
        description:
          type: string
        memberIds:
          type: array
          items:
            type: string
    ApiUpdateFamilyTaskCommandArgs:
      type: object
      required:
        - task
      properties:
        task:
          $ref: '#/components/schemas/ApiFamilyTask'
    ApiDeleteFamilyTaskCommandArgs:
      type: object
      required:
        - taskId
      properties:
        taskId:
          type: string
    ApiTaskStats:
      type: object
      required:
        - forDate
        - userId
        - doneTasksCount
        - totalTasksCount
      properties:
        forDate:
          type: string
          format: date-time
        userId:
          type: string
        doneTasksCount:
          type: integer
        totalTasksCount:
          type: integer

    ApiLoadProblemForAssignmentCommandArgs:
      type: object
      required:
        - assignmentId
        - forDate
      properties:
        assignmentId:
          type: string
        forDate:
          type: string
          format: date-time
    ApiLoadProblemForAssignmentCommandResult:
      type: object
      required:
        - problem
      properties:
        problem:
          $ref: '#/components/schemas/ApiProblem'


    ApiGenerateProblemsCommandArgs:
      type: object
      required:
        - problemSetId
        - userId
      properties:
        problemSetId:
          type: string
        userId:
          type: string
        additionalRequestText:
          type: string

    ApiCreateProblemsInSetCommandArgs:
      type: object
      required:
        - problemSetId
        - problems
        - forUserId
      properties:
        problemSetId:
          type: string
        forUserId:
          type: string
        problems:
          type: array
          items:
            $ref: '#/components/schemas/ApiProblemForEdit'

    ApiSubmitProblemAnswerCommandArgs:
        type: object
        required:
          - assignmentId
          - problemId
          - answerId
        properties:
          assignmentId:
            type: string
          problemId:
            type: string
          answerId:
            type: string

    ApiSubmitProblemAnswerCommandResp:
        type: object
        required:
          - isCorrect
          - correctAnswerId
        properties:
          isCorrect:
            type: boolean
          correctAnswerId:
            type: string
          explanation:
            type: string

    ApiCreateProblemSetCommandArgs:
        type: object
        required:
            - title
            - forUserId
        properties:
          title:
            type: string
          forUserId:
            type: string
          description:
            type: string
